<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yc.olshop.dao.OrdersMapper" >
	<!-- 自定义查询 -->
<select id="getAllOrderAddress" resultType="String">
	select address from orders o
	LEFT JOIN address a on 
	o.addr_id=a.addr_id
	where o.`status`&gt;0
</select>
<select id="queryOrderTransAllYearByMonth" resultType="java.util.HashMap">
	
SELECT left(temp.date,7), coalesce(u.unmber,0) 'number' from
(
	SELECT adddate(#{currYearFD}, interval numlist.id month) AS 'date' FROM 
	(
			SELECT * from 
			(	
				SELECT n1.i + n10.i * 10 AS id 
				FROM num n1 CROSS JOIN num AS n10	
			) a where a.id&lt;=12
	) AS numlist WHERE adddate(#{currYearFD}, interval numlist.id month) &lt;= #{currYearLMD}) temp
	LEFT JOIN 
	(		
	SELECT left(ordertime,7)as udate,count(oid) unmber 
	FROM orders 
	where orders.`status`=#{status}
	GROUP BY udate
	) u  on left(temp.date,7) = u.udate 

	ORDER BY temp.date
</select>	
<select id="getOrdersTransByDays" resultType="java.util.HashMap">
SELECT
	DATE(date) orderTime,
	count(oid) odrNum,
	COALESCE (sum(total_money), 0) odrMoney
FROM
	(
		select adddate(#{dateStr}, numlist.id) as 'date' 
	  from (
		 SELECT n1.i + n10.i*10 + n100.i*100 AS id 
		 FROM num n1 cross join num as n10 
     cross join num as n100) as numlist 
     where adddate(#{dateStr}, numlist.id) &lt;= CURDATE()
	) t_date
LEFT JOIN (
	SELECT * from orders WHERE `status`in 
	<foreach collection="statusArr" item="status" index="index" open="(" close=")" separator=",">
	  #{status}
	</foreach>
	)odr 
ON DATE(odr.ordertime) = t_date.date
WHERE
	to_days(now()) - to_days(date) &lt; #{dayNum}
GROUP BY
	to_days(date)

</select>	
	
	
<select id="getAllTransMoney" resultType="double">
	select COALESCE(sum(total_money)) FROM orders
</select>
<select id="getTodayTransMoney" resultType="double">
	select COALESCE(sum(total_money),0) from orders where to_days(ordertime) = to_days(now())
</select>
<select id="getAllOrdersNum" resultType="integer">
	SELECT COALESCE(count(oid),0) from orders
</select>

  <resultMap id="BaseResultMap" type="com.yc.olshop.bean.Orders" >
    <id column="oid" property="oid" jdbcType="VARCHAR" />
    <result column="ordertime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="total_money" property="totalMoney" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="addr_id" property="addrId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    `oid`, `ordertime`, `total_money`, `status`, `uid`, `desc`, `addr_id`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yc.olshop.bean.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where `oid` = #{oid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from orders
    where `oid` = #{oid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yc.olshop.bean.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yc.olshop.bean.Orders" >
    insert into orders (`oid`, `ordertime`, `total_money`, 
      `status`, `uid`, `desc`, 
      `addr_id`)
    values (#{oid,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP}, #{totalMoney,jdbcType=DOUBLE}, 
      #{status,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{desc,jdbcType=VARCHAR}, 
      #{addrId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.olshop.bean.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        `oid`,
      </if>
      <if test="ordertime != null" >
        `ordertime`,
      </if>
      <if test="totalMoney != null" >
        `total_money`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="uid != null" >
        `uid`,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="addrId != null" >
        `addr_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null" >
        #{totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="addrId != null" >
        #{addrId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yc.olshop.bean.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.oid != null" >
        `oid` = #{record.oid,jdbcType=VARCHAR},
      </if>
      <if test="record.ordertime != null" >
        `ordertime` = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalMoney != null" >
        `total_money` = #{record.totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        `uid` = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.desc != null" >
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.addrId != null" >
        `addr_id` = #{record.addrId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set `oid` = #{record.oid,jdbcType=VARCHAR},
      `ordertime` = #{record.ordertime,jdbcType=TIMESTAMP},
      `total_money` = #{record.totalMoney,jdbcType=DOUBLE},
      `status` = #{record.status,jdbcType=INTEGER},
      `uid` = #{record.uid,jdbcType=INTEGER},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      `addr_id` = #{record.addrId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.olshop.bean.Orders" >
    update orders
    <set >
      <if test="ordertime != null" >
        `ordertime` = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null" >
        `total_money` = #{totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        `uid` = #{uid,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="addrId != null" >
        `addr_id` = #{addrId,jdbcType=INTEGER},
      </if>
    </set>
    where `oid` = #{oid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.olshop.bean.Orders" >
    update orders
    set `ordertime` = #{ordertime,jdbcType=TIMESTAMP},
      `total_money` = #{totalMoney,jdbcType=DOUBLE},
      `status` = #{status,jdbcType=INTEGER},
      `uid` = #{uid,jdbcType=INTEGER},
      `desc` = #{desc,jdbcType=VARCHAR},
      `addr_id` = #{addrId,jdbcType=INTEGER}
    where `oid` = #{oid,jdbcType=VARCHAR}
  </update>
<resultMap id="AddressMap" type="com.yc.olshop.bean.Orders" >
    <id column="oid" property="oid" jdbcType="VARCHAR" />
    <result column="ordertime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="total_money" property="totalMoney" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="addr_id" property="addrId" jdbcType="INTEGER" />
    <association property="addr" javaType="com.yc.olshop.bean.Address">
    	<id column="addr_id" property="addrId"></id>
    	<result column="address" property="address"></result>
    </association>
  </resultMap>
  
  <select id="selectAllOrderWithAddress" resultMap="AddressMap">
	  	SELECT
		o.*,a.address 
	FROM
		orders o
		LEFT JOIN address a ON o.addr_id = a.addr_id 
	where o.uid=#{uid}
	ORDER BY
		o.ordertime DESC
  </select>
</mapper>